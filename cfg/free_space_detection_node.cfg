#!/usr/bin/env python
import roslib

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("m_debug_b", bool_t, 0, "Autogenerated parameter based on model.", False)
gen.add("m_extractROI_b", bool_t, 0, "Autogenerated parameter based on model.", False)
gen.add("m_printTimings_b", bool_t, 0, "Autogenerated parameter based on model.", False)
gen.add("m_writeResults_b", bool_t, 0, "Autogenerated parameter based on model.", False)
gen.add("m_sigma_gaussian_filter_d", double_t, 0, "Autogenerated parameter based on model.", 0.7, 0, 1)
gen.add("m_minH_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 0.3, 0, 1)
gen.add("m_minI_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 0.3, 0, 1)
gen.add("m_felz_sigma_d", double_t, 0, "Autogenerated parameter based on model.", 0.9, 0, 1)
gen.add("m_felz_k_i", int_t, 0, "Autogenerated parameter based on model.", 200, 0, 1000)
gen.add("m_felz_minSize_i", int_t, 0, "Autogenerated parameter based on model.", 250, 0, 1000)
gen.add("m_segmentClassification_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 0.6, 0, 1)
gen.add("m_morphSize_i", int_t, 0, "Autogenerated parameter based on model.", 2, 0, 10)
gen.add("m_Vdisp_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 10.0, 0, 100)
gen.add("m_minValidDisp_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 0.7, 0, 1)
gen.add("m_resolution_H_d", double_t, 0, "Autogenerated parameter based on model.", 0.05, 0, 0.1)
gen.add("m_resolution_I_d", double_t, 0, "Autogenerated parameter based on model.", 0.03, 0, 0.1)
gen.add("m_Udisp_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 5.0, 0, 10)
gen.add("m_maxDelay_d", double_t, 0, "Autogenerated parameter based on model.", 450.0, 0, 1000)
gen.add("m_alpha_d", double_t, 0, "Autogenerated parameter based on model.", 0.7, 0, 1)
gen.add("m_maxH_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 0.8, 0, 1)
gen.add("m_maxI_thresh_d", double_t, 0, "Autogenerated parameter based on model.", 0.8, 0, 1)
gen.add("m_priorityAccuracy_b", bool_t, 0, "Autogenerated parameter based on model.", False)
gen.add("m_minIntensity_i", int_t, 0, "Autogenerated parameter based on model.", 80, 0, 255)

exit(gen.generate("free_space_detection", "free_space_detection", "free_space_detection_node"))
